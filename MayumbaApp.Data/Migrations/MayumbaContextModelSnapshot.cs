// <auto-generated />
using System;
using MayumbaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MayumbaApp.Data.Migrations
{
    [DbContext(typeof(MayumbaContext))]
    partial class MayumbaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EstatesAppDomain.Bill", b =>
                {
                    b.Property<string>("Bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FullAmountToPay")
                        .HasColumnType("int");

                    b.Property<string>("Payment_Method")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Bill_Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("EstatesAppDomain.Management", b =>
                {
                    b.Property<string>("PropertyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Manager_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Manager_NIN1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PropertyId", "Manager_NIN");

                    b.HasIndex("Manager_NIN1");

                    b.ToTable("Managements");
                });

            modelBuilder.Entity("EstatesAppDomain.Manager", b =>
                {
                    b.Property<string>("Manager_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manager_FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager_LNane")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritualStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Manager_NIN");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("EstatesAppDomain.Occupant", b =>
                {
                    b.Property<string>("Occupant_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupantType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupant_FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupant_LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Occupant_NIN");

                    b.ToTable("Occupants");
                });

            modelBuilder.Entity("EstatesAppDomain.Owner", b =>
                {
                    b.Property<string>("Owner_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner_FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner_LName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Owner_NIN");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("EstatesAppDomain.Ownership", b =>
                {
                    b.Property<string>("Owner_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Property_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Owner_NIN1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Percent_Owned")
                        .HasColumnType("int");

                    b.Property<string>("Property_Id1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Owner_NIN", "Property_Id");

                    b.HasIndex("Owner_NIN1");

                    b.HasIndex("Property_Id1");

                    b.ToTable("Ownerships");
                });

            modelBuilder.Entity("EstatesAppDomain.Payment", b =>
                {
                    b.Property<string>("Bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Occupant_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bill_Id1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Occupant_NIN1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Bill_Id", "Occupant_NIN");

                    b.HasIndex("Bill_Id1");

                    b.HasIndex("Occupant_NIN1");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EstatesAppDomain.Property", b =>
                {
                    b.Property<string>("Property_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Availability_Status")
                        .HasColumnType("bit");

                    b.Property<int>("No_Of_bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("No_Of_bedrooms")
                        .HasColumnType("int");

                    b.Property<int>("No_Of_small_car_parking_area")
                        .HasColumnType("int");

                    b.Property<string>("PropertyType_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Property_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("inside_area_size")
                        .HasColumnType("int");

                    b.HasKey("Property_Id");

                    b.HasIndex("PropertyType_Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("EstatesAppDomain.PropertyType", b =>
                {
                    b.Property<string>("PropertyType_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropertyType_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyType_Id");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("EstatesAppDomain.RentAgreement", b =>
                {
                    b.Property<string>("Occupant_NIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Property_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Agreement_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Amount_Of_Initial_Deposite")
                        .HasColumnType("int");

                    b.Property<int>("Cost_Per_Period")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Occupant_NIN1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Per_Period_Charged")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property_Id1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Occupant_NIN", "Property_Id");

                    b.HasIndex("Occupant_NIN1");

                    b.HasIndex("Property_Id1");

                    b.ToTable("RentAgreements");
                });

            modelBuilder.Entity("EstatesAppDomain.Management", b =>
                {
                    b.HasOne("EstatesAppDomain.Manager", "Manager")
                        .WithMany("Managements")
                        .HasForeignKey("Manager_NIN1");

                    b.HasOne("EstatesAppDomain.Property", "Property")
                        .WithMany("Managements")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EstatesAppDomain.Ownership", b =>
                {
                    b.HasOne("EstatesAppDomain.Owner", "Owner")
                        .WithMany("Ownerships")
                        .HasForeignKey("Owner_NIN1");

                    b.HasOne("EstatesAppDomain.Property", "Property")
                        .WithMany("Ownerships")
                        .HasForeignKey("Property_Id1");
                });

            modelBuilder.Entity("EstatesAppDomain.Payment", b =>
                {
                    b.HasOne("EstatesAppDomain.Bill", "Bill")
                        .WithMany("Payments")
                        .HasForeignKey("Bill_Id1");

                    b.HasOne("EstatesAppDomain.Occupant", "Occupant")
                        .WithMany("Payments")
                        .HasForeignKey("Occupant_NIN1");
                });

            modelBuilder.Entity("EstatesAppDomain.Property", b =>
                {
                    b.HasOne("EstatesAppDomain.PropertyType", "propertyType")
                        .WithMany()
                        .HasForeignKey("PropertyType_Id");
                });

            modelBuilder.Entity("EstatesAppDomain.RentAgreement", b =>
                {
                    b.HasOne("EstatesAppDomain.Occupant", "Occupant")
                        .WithMany("RentAgreements")
                        .HasForeignKey("Occupant_NIN1");

                    b.HasOne("EstatesAppDomain.Property", "Property")
                        .WithMany("RentAgreements")
                        .HasForeignKey("Property_Id1");
                });
#pragma warning restore 612, 618
        }
    }
}
